{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021-2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.env = exports.DebugLogBackendBase = exports.placeholder = exports.AdhocDebugLogger = exports.LogSeverity = void 0;\nexports.getNodeBackend = getNodeBackend;\nexports.getDebugBackend = getDebugBackend;\nexports.getStructuredBackend = getStructuredBackend;\nexports.setBackend = setBackend;\nexports.log = log;\nconst node_events_1 = require(\"node:events\");\nconst process = __importStar(require(\"node:process\"));\nconst util = __importStar(require(\"node:util\"));\nconst colours_1 = require(\"./colours\");\n// Some functions (as noted) are based on the Node standard library, from\n// the following file:\n//\n// https://github.com/nodejs/node/blob/main/lib/internal/util/debuglog.js\n/**\n * This module defines an ad-hoc debug logger for Google Cloud Platform\n * client libraries in Node. An ad-hoc debug logger is a tool which lets\n * users use an external, unified interface (in this case, environment\n * variables) to determine what logging they want to see at runtime. This\n * isn't necessarily fed into the console, but is meant to be under the\n * control of the user. The kind of logging that will be produced by this\n * is more like \"call retry happened\", not \"event you'd want to record\n * in Cloud Logger\".\n *\n * More for Googlers implementing libraries with it:\n * go/cloud-client-logging-design\n */\n/**\n * Possible log levels. These are a subset of Cloud Observability levels.\n * https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#LogSeverity\n */\nvar LogSeverity;\n(function (LogSeverity) {\n  LogSeverity[\"DEFAULT\"] = \"DEFAULT\";\n  LogSeverity[\"DEBUG\"] = \"DEBUG\";\n  LogSeverity[\"INFO\"] = \"INFO\";\n  LogSeverity[\"WARNING\"] = \"WARNING\";\n  LogSeverity[\"ERROR\"] = \"ERROR\";\n})(LogSeverity || (exports.LogSeverity = LogSeverity = {}));\n/**\n * Our logger instance. This actually contains the meat of dealing\n * with log lines, including EventEmitter. This contains the function\n * that will be passed back to users of the package.\n */\nclass AdhocDebugLogger extends node_events_1.EventEmitter {\n  /**\n   * @param upstream The backend will pass a function that will be\n   *   called whenever our logger function is invoked.\n   */\n  constructor(namespace, upstream) {\n    var _this;\n    super();\n    _this = this;\n    this.namespace = namespace;\n    this.upstream = upstream;\n    this.func = Object.assign(this.invoke.bind(this), {\n      // Also add an instance pointer back to us.\n      instance: this,\n      // And pull over the EventEmitter functionality.\n      on: (event, listener) => this.on(event, listener)\n    });\n    // Convenience methods for log levels.\n    this.func.debug = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _this.invokeSeverity(LogSeverity.DEBUG, ...args);\n    };\n    this.func.info = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _this.invokeSeverity(LogSeverity.INFO, ...args);\n    };\n    this.func.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _this.invokeSeverity(LogSeverity.WARNING, ...args);\n    };\n    this.func.error = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _this.invokeSeverity(LogSeverity.ERROR, ...args);\n    };\n    this.func.sublog = namespace => log(namespace, this.func);\n  }\n  invoke(fields) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n    // Push out any upstream logger first.\n    if (this.upstream) {\n      this.upstream(fields, ...args);\n    }\n    // Emit sink events.\n    this.emit('log', fields, args);\n  }\n  invokeSeverity(severity) {\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n    this.invoke({\n      severity\n    }, ...args);\n  }\n}\nexports.AdhocDebugLogger = AdhocDebugLogger;\n/**\n * This can be used in place of a real logger while waiting for Promises or disabling logging.\n */\nexports.placeholder = new AdhocDebugLogger('', () => {}).func;\n/**\n * The base class for debug logging backends. It's possible to use this, but the\n * same non-guarantees above still apply (unstable interface, etc).\n *\n * @private\n * @internal\n */\nclass DebugLogBackendBase {\n  constructor() {\n    var _a;\n    this.cached = new Map();\n    this.filters = [];\n    this.filtersSet = false;\n    // Look for the Node config variable for what systems to enable. We'll store\n    // these for the log method below, which will call setFilters() once.\n    let nodeFlag = (_a = process.env[exports.env.nodeEnables]) !== null && _a !== void 0 ? _a : '*';\n    if (nodeFlag === 'all') {\n      nodeFlag = '*';\n    }\n    this.filters = nodeFlag.split(',');\n  }\n  log(namespace, fields) {\n    try {\n      if (!this.filtersSet) {\n        this.setFilters();\n        this.filtersSet = true;\n      }\n      let logger = this.cached.get(namespace);\n      if (!logger) {\n        logger = this.makeLogger(namespace);\n        this.cached.set(namespace, logger);\n      }\n      for (var _len7 = arguments.length, args = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n        args[_key7 - 2] = arguments[_key7];\n      }\n      logger(fields, ...args);\n    } catch (e) {\n      // Silently ignore all errors; we don't want them to interfere with\n      // the user's running app.\n      // e;\n      console.error(e);\n    }\n  }\n}\nexports.DebugLogBackendBase = DebugLogBackendBase;\n// The basic backend. This one definitely works, but it's less feature-filled.\n//\n// Rather than using util.debuglog, this implements the same basic logic directly.\n// The reason for this decision is that debuglog checks the value of the\n// NODE_DEBUG environment variable before any user code runs; we therefore\n// can't pipe our own enables into it (and util.debuglog will never print unless\n// the user duplicates it into NODE_DEBUG, which isn't reasonable).\n//\nclass NodeBackend extends DebugLogBackendBase {\n  constructor() {\n    super(...arguments);\n    // Default to allowing all systems, since we gate earlier based on whether the\n    // variable is empty.\n    this.enabledRegexp = /.*/g;\n  }\n  isEnabled(namespace) {\n    return this.enabledRegexp.test(namespace);\n  }\n  makeLogger(namespace) {\n    if (!this.enabledRegexp.test(namespace)) {\n      return () => {};\n    }\n    return function (fields) {\n      var _a;\n      // TODO: `fields` needs to be turned into a string here, one way or another.\n      const nscolour = `${colours_1.Colours.green}${namespace}${colours_1.Colours.reset}`;\n      const pid = `${colours_1.Colours.yellow}${process.pid}${colours_1.Colours.reset}`;\n      let level;\n      switch (fields.severity) {\n        case LogSeverity.ERROR:\n          level = `${colours_1.Colours.red}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        case LogSeverity.INFO:\n          level = `${colours_1.Colours.magenta}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        case LogSeverity.WARNING:\n          level = `${colours_1.Colours.yellow}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        default:\n          level = (_a = fields.severity) !== null && _a !== void 0 ? _a : LogSeverity.DEFAULT;\n          break;\n      }\n      for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n        args[_key8 - 1] = arguments[_key8];\n      }\n      const msg = util.formatWithOptions({\n        colors: colours_1.Colours.enabled\n      }, ...args);\n      const filteredFields = Object.assign({}, fields);\n      delete filteredFields.severity;\n      const fieldsJson = Object.getOwnPropertyNames(filteredFields).length ? JSON.stringify(filteredFields) : '';\n      const fieldsColour = fieldsJson ? `${colours_1.Colours.grey}${fieldsJson}${colours_1.Colours.reset}` : '';\n      console.error('%s [%s|%s] %s%s', pid, nscolour, level, msg, fieldsJson ? ` ${fieldsColour}` : '');\n    };\n  }\n  // Regexp patterns below are from here:\n  // https://github.com/nodejs/node/blob/c0aebed4b3395bd65d54b18d1fd00f071002ac20/lib/internal/util/debuglog.js#L36\n  setFilters() {\n    const totalFilters = this.filters.join(',');\n    const regexp = totalFilters.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&').replace(/\\*/g, '.*').replace(/,/g, '$|^');\n    this.enabledRegexp = new RegExp(`^${regexp}$`, 'i');\n  }\n}\n/**\n * @returns A backend based on Node util.debuglog; this is the default.\n */\nfunction getNodeBackend() {\n  return new NodeBackend();\n}\nclass DebugBackend extends DebugLogBackendBase {\n  constructor(pkg) {\n    super();\n    this.debugPkg = pkg;\n  }\n  makeLogger(namespace) {\n    const debugLogger = this.debugPkg(namespace);\n    return function (fields) {\n      for (var _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n        args[_key9 - 1] = arguments[_key9];\n      }\n      // TODO: `fields` needs to be turned into a string here.\n      debugLogger(args[0], ...args.slice(1));\n    };\n  }\n  setFilters() {\n    var _a;\n    const existingFilters = (_a = process.env['NODE_DEBUG']) !== null && _a !== void 0 ? _a : '';\n    process.env['NODE_DEBUG'] = `${existingFilters}${existingFilters ? ',' : ''}${this.filters.join(',')}`;\n  }\n}\n/**\n * Creates a \"debug\" package backend. The user must call require('debug') and pass\n * the resulting object to this function.\n *\n * ```\n *  setBackend(getDebugBackend(require('debug')))\n * ```\n *\n * https://www.npmjs.com/package/debug\n *\n * Note: Google does not explicitly endorse or recommend this package; it's just\n * being provided as an option.\n *\n * @returns A backend based on the npm \"debug\" package.\n */\nfunction getDebugBackend(debugPkg) {\n  return new DebugBackend(debugPkg);\n}\n/**\n * This pretty much works like the Node logger, but it outputs structured\n * logging JSON matching Google Cloud's ingestion specs. Rather than handling\n * its own output, it wraps another backend. The passed backend must be a subclass\n * of `DebugLogBackendBase` (any of the backends exposed by this package will work).\n */\nclass StructuredBackend extends DebugLogBackendBase {\n  constructor(upstream) {\n    var _a;\n    super();\n    this.upstream = (_a = upstream) !== null && _a !== void 0 ? _a : new NodeBackend();\n  }\n  makeLogger(namespace) {\n    const debugLogger = this.upstream.makeLogger(namespace);\n    return function (fields) {\n      var _a;\n      const severity = (_a = fields.severity) !== null && _a !== void 0 ? _a : LogSeverity.INFO;\n      for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n        args[_key10 - 1] = arguments[_key10];\n      }\n      const json = Object.assign({\n        severity,\n        message: util.format(...args)\n      }, fields);\n      const jsonString = JSON.stringify(json);\n      debugLogger(fields, jsonString);\n    };\n  }\n  setFilters() {\n    this.upstream.setFilters();\n  }\n}\n/**\n * Creates a \"structured logging\" backend. This pretty much works like the\n * Node logger, but it outputs structured logging JSON matching Google\n * Cloud's ingestion specs instead of plain text.\n *\n * ```\n *  setBackend(getStructuredBackend())\n * ```\n *\n * @param upstream If you want to use something besides the Node backend to\n *   write the actual log lines into, pass that here.\n * @returns A backend based on Google Cloud structured logging.\n */\nfunction getStructuredBackend(upstream) {\n  return new StructuredBackend(upstream);\n}\n/**\n * The environment variables that we standardized on, for all ad-hoc logging.\n */\nexports.env = {\n  /**\n   * Filter wildcards specific to the Node syntax, and similar to the built-in\n   * utils.debuglog() environment variable. If missing, disables logging.\n   */\n  nodeEnables: 'GOOGLE_SDK_NODE_LOGGING'\n};\n// Keep a copy of all namespaced loggers so users can reliably .on() them.\n// Note that these cached functions will need to deal with changes in the backend.\nconst loggerCache = new Map();\n// Our current global backend. This might be:\nlet cachedBackend = undefined;\n/**\n * Set the backend to use for our log output.\n * - A backend object\n * - null to disable logging\n * - undefined for \"nothing yet\", defaults to the Node backend\n *\n * @param backend Results from one of the get*Backend() functions.\n */\nfunction setBackend(backend) {\n  cachedBackend = backend;\n  loggerCache.clear();\n}\n/**\n * Creates a logging function. Multiple calls to this with the same namespace\n * will produce the same logger, with the same event emitter hooks.\n *\n * Namespaces can be a simple string (\"system\" name), or a qualified string\n * (system:subsystem), which can be used for filtering, or for \"system:*\".\n *\n * @param namespace The namespace, a descriptive text string.\n * @returns A function you can call that works similar to console.log().\n */\nfunction log(namespace, parent) {\n  // If the enable flag isn't set, do nothing.\n  const enablesFlag = process.env[exports.env.nodeEnables];\n  if (!enablesFlag) {\n    return exports.placeholder;\n  }\n  // This might happen mostly if the typings are dropped in a user's code,\n  // or if they're calling from JavaScript.\n  if (!namespace) {\n    return exports.placeholder;\n  }\n  // Handle sub-loggers.\n  if (parent) {\n    namespace = `${parent.instance.namespace}:${namespace}`;\n  }\n  // Reuse loggers so things like event sinks are persistent.\n  const existing = loggerCache.get(namespace);\n  if (existing) {\n    return existing.func;\n  }\n  // Do we have a backend yet?\n  if (cachedBackend === null) {\n    // Explicitly disabled.\n    return exports.placeholder;\n  } else if (cachedBackend === undefined) {\n    // One hasn't been made yet, so default to Node.\n    cachedBackend = getNodeBackend();\n  }\n  // The logger is further wrapped so we can handle the backend changing out.\n  const logger = (() => {\n    let previousBackend = undefined;\n    const newLogger = new AdhocDebugLogger(namespace, function (fields) {\n      if (previousBackend !== cachedBackend) {\n        // Did the user pass a custom backend?\n        if (cachedBackend === null) {\n          // Explicitly disabled.\n          return;\n        } else if (cachedBackend === undefined) {\n          // One hasn't been made yet, so default to Node.\n          cachedBackend = getNodeBackend();\n        }\n        previousBackend = cachedBackend;\n      }\n      for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n        args[_key11 - 1] = arguments[_key11];\n      }\n      cachedBackend === null || cachedBackend === void 0 ? void 0 : cachedBackend.log(namespace, fields, ...args);\n    });\n    return newLogger;\n  })();\n  loggerCache.set(namespace, logger);\n  return logger.func;\n}","map":{"version":3,"names":["exports","getNodeBackend","getDebugBackend","getStructuredBackend","setBackend","log","node_events_1","require","process","__importStar","util","colours_1","LogSeverity","AdhocDebugLogger","EventEmitter","constructor","namespace","upstream","_this","this","func","Object","assign","invoke","bind","instance","on","event","listener","debug","_len","arguments","length","args","Array","_key","invokeSeverity","DEBUG","info","_len2","_key2","INFO","warn","_len3","_key3","WARNING","error","_len4","_key4","ERROR","sublog","fields","_len5","_key5","emit","severity","_len6","_key6","placeholder","DebugLogBackendBase","cached","Map","filters","filtersSet","nodeFlag","_a","env","nodeEnables","split","setFilters","logger","get","makeLogger","set","_len7","_key7","e","console","NodeBackend","enabledRegexp","isEnabled","test","nscolour","Colours","green","reset","pid","yellow","level","red","magenta","DEFAULT","_len8","_key8","msg","formatWithOptions","colors","enabled","filteredFields","fieldsJson","getOwnPropertyNames","JSON","stringify","fieldsColour","grey","totalFilters","join","regexp","replace","RegExp","DebugBackend","pkg","debugPkg","debugLogger","_len9","_key9","slice","existingFilters","StructuredBackend","_len10","_key10","json","message","format","jsonString","loggerCache","cachedBackend","undefined","backend","clear","parent","enablesFlag","existing","previousBackend","newLogger","_len11","_key11"],"sources":["../../src/logging-utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}