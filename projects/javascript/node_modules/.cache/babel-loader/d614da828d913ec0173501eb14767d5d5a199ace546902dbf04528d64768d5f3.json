{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst h2 = require(\"./http2\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n  return obj !== null && typeof obj === 'object' && typeof obj.pipe === 'function' && obj.readable !== false && typeof obj._read === 'function' && typeof obj._readableState === 'object';\n}\nfunction getMissingParams(params, required) {\n  const missing = new Array();\n  required.forEach(param => {\n    // Is the required param in the params object?\n    if (params[param] === undefined) {\n      missing.push(param);\n    }\n  });\n  // If there are any required params missing, return their names in array,\n  // otherwise return null\n  return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n  if (callback) {\n    createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n  } else {\n    return createAPIRequestAsync(parameters);\n  }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n  var _a, _b, _c, _d;\n  // Combine the GaxiosOptions options passed with this specific\n  // API call with the global options configured at the API Context\n  // level, or at the global level.\n  const options = extend(true, {},\n  // Ensure we don't leak settings upstream\n  ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {},\n  // Google level options\n  parameters.context._options || {},\n  // Per-API options\n  parameters.options // API call params\n  );\n\n  const params = extend(true, {},\n  // New base object\n  options.params,\n  // Combined global/per-api params\n  parameters.params // API call params\n  );\n\n  options.userAgentDirectives = options.userAgentDirectives || [];\n  const media = params.media || {};\n  /**\n   * In a previous version of this API, the request body was stuffed in a field\n   * named `resource`.  This caused lots of problems, because it's not uncommon\n   * to have an actual named parameter required which is also named `resource`.\n   * This meant that users would have to use `resource_` in those cases, which\n   * pretty much nobody figures out on their own. The request body is now\n   * documented as being in the `requestBody` property, but we also need to keep\n   * using `resource` for reasons of back-compat. Cases that need to be covered\n   * here:\n   * - user provides just a `resource` with a request body\n   * - user provides both a `resource` and a `resource_`\n   * - user provides just a `requestBody`\n   * - user provides both a `requestBody` and a `resource`\n   */\n  let resource = params.requestBody;\n  if (!params.requestBody && params.resource && (!parameters.requiredParams.includes('resource') || typeof params.resource !== 'string')) {\n    resource = params.resource;\n    delete params.resource;\n  }\n  delete params.requestBody;\n  let authClient = params.auth || options.auth;\n  const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n  delete params.media;\n  delete params.auth;\n  // Grab headers from user provided options\n  const headers = params.headers || {};\n  populateAPIHeader(headers, options.apiVersion);\n  delete params.headers;\n  // Un-alias parameters that were modified due to conflicts with reserved names\n  Object.keys(params).forEach(key => {\n    if (key.slice(-1) === '_') {\n      const newKey = key.slice(0, -1);\n      params[newKey] = params[key];\n      delete params[key];\n    }\n  });\n  // Check for missing required parameters in the API request\n  const missingParams = getMissingParams(params, parameters.requiredParams);\n  if (missingParams) {\n    // Some params are missing - stop further operations and inform the\n    // developer which required params are not included in the request\n    throw new Error('Missing required parameters: ' + missingParams.join(', '));\n  }\n  // Parse urls\n  if (options.url) {\n    let url = options.url;\n    if (typeof url === 'object') {\n      url = url.toString();\n    }\n    options.url = urlTemplate.parse(url).expand(params);\n  }\n  if (parameters.mediaUrl) {\n    parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n  }\n  // Rewrite url if rootUrl is globally set\n  if (parameters.context._options.rootUrl !== undefined && options.url !== undefined) {\n    const originalUrl = new URL(options.url);\n    const path = originalUrl.href.substr(originalUrl.origin.length);\n    options.url = new URL(path, parameters.context._options.rootUrl).href;\n  }\n  // When forming the querystring, override the serializer so that array\n  // values are serialized like this:\n  // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n  // This serializer also encodes spaces in the querystring as `%20`,\n  // whereas the default serializer in gaxios encodes to a `+`.\n  options.paramsSerializer = params => {\n    return qs.stringify(params, {\n      arrayFormat: 'repeat'\n    });\n  };\n  // delete path params from the params object so they do not end up in query\n  parameters.pathParams.forEach(param => delete params[param]);\n  // if authClient is actually a string, use it as an API KEY\n  if (typeof authClient === 'string') {\n    params.key = params.key || authClient;\n    authClient = undefined;\n  }\n  function multipartUpload(multipart) {\n    const boundary = uuid.v4();\n    const finale = `--${boundary}--`;\n    const rStream = new stream.PassThrough({\n      flush(callback) {\n        this.push('\\r\\n');\n        this.push(finale);\n        callback();\n      }\n    });\n    const pStream = new ProgressStream();\n    const isStream = isReadableStream(multipart[1].body);\n    headers['content-type'] = `multipart/related; boundary=${boundary}`;\n    for (const part of multipart) {\n      const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n      rStream.push(preamble);\n      if (typeof part.body === 'string') {\n        rStream.push(part.body);\n        rStream.push('\\r\\n');\n      } else {\n        // Gaxios does not natively support onUploadProgress in node.js.\n        // Pipe through the pStream first to read the number of bytes read\n        // for the purpose of tracking progress.\n        pStream.on('progress', bytesRead => {\n          if (options.onUploadProgress) {\n            options.onUploadProgress({\n              bytesRead\n            });\n          }\n        });\n        part.body.pipe(pStream).pipe(rStream);\n      }\n    }\n    if (!isStream) {\n      rStream.push(finale);\n      rStream.push(null);\n    }\n    options.data = rStream;\n  }\n  function browserMultipartUpload(multipart) {\n    const boundary = uuid.v4();\n    const finale = `--${boundary}--`;\n    headers['content-type'] = `multipart/related; boundary=${boundary}`;\n    let content = '';\n    for (const part of multipart) {\n      const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n      content += preamble;\n      if (typeof part.body === 'string') {\n        content += part.body;\n        content += '\\r\\n';\n      }\n    }\n    content += finale;\n    options.data = content;\n  }\n  if (parameters.mediaUrl && media.body) {\n    options.url = parameters.mediaUrl;\n    if (resource) {\n      params.uploadType = 'multipart';\n      const multipart = [{\n        'content-type': 'application/json',\n        body: JSON.stringify(resource)\n      }, {\n        'content-type': media.mimeType || resource && resource.mimeType || defaultMime,\n        body: media.body\n      }];\n      if (!(0, isbrowser_1.isBrowser)()) {\n        // gaxios doesn't support multipart/related uploads, so it has to\n        // be implemented here.\n        multipartUpload(multipart);\n      } else {\n        browserMultipartUpload(multipart);\n      }\n    } else {\n      params.uploadType = 'media';\n      Object.assign(headers, {\n        'content-type': media.mimeType || defaultMime\n      });\n      options.data = media.body;\n    }\n  } else {\n    options.data = resource || undefined;\n  }\n  options.headers = extend(true, options.headers || {}, headers);\n  options.params = params;\n  if (!(0, isbrowser_1.isBrowser)()) {\n    options.headers['Accept-Encoding'] = 'gzip';\n    options.userAgentDirectives.push({\n      product: 'google-api-nodejs-client',\n      version: pkg.version,\n      comment: 'gzip'\n    });\n    const userAgent = options.userAgentDirectives.map(d => {\n      let line = `${d.product}/${d.version}`;\n      if (d.comment) {\n        line += ` (${d.comment})`;\n      }\n      return line;\n    }).join(' ');\n    options.headers['User-Agent'] = userAgent;\n  }\n  // By default gaxios treats any 2xx as valid, and all non 2xx status\n  // codes as errors.  This is a problem for HTTP 304s when used along\n  // with an eTag.\n  if (!options.validateStatus) {\n    options.validateStatus = status => {\n      return status >= 200 && status < 300 || status === 304;\n    };\n  }\n  // Retry by default\n  options.retry = options.retry === undefined ? true : options.retry;\n  delete options.auth; // is overridden by our auth code\n  // Determine TPC universe\n  if (options.universeDomain && options.universe_domain && options.universeDomain !== options.universe_domain) {\n    throw new Error('Please set either universe_domain or universeDomain, but not both.');\n  }\n  const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n  const universeDomain = (_d = (_c = (_b = options.universeDomain) !== null && _b !== void 0 ? _b : options.universe_domain) !== null && _c !== void 0 ? _c : universeDomainEnvVar) !== null && _d !== void 0 ? _d : 'googleapis.com';\n  // Update URL to point to the given TPC universe\n  if (universeDomain !== 'googleapis.com' && options.url) {\n    const url = new URL(options.url);\n    if (url.hostname.endsWith('.googleapis.com')) {\n      url.hostname = url.hostname.replace(/googleapis\\.com$/, universeDomain);\n      options.url = url.toString();\n    }\n  }\n  // Perform the HTTP request.  NOTE: this function used to return a\n  // mikeal/request object. Since the transition to Axios, the method is\n  // now void.  This may be a source of confusion for users upgrading from\n  // version 24.0 -> 25.0 or up.\n  if (authClient && typeof authClient === 'object') {\n    // Validate TPC universe\n    const universeFromAuth = typeof authClient.getUniverseDomain === 'function' ? await authClient.getUniverseDomain() : undefined;\n    if (universeFromAuth && universeDomain !== universeFromAuth) {\n      throw new Error(`The configured universe domain (${universeDomain}) does not match the universe domain found in the credentials (${universeFromAuth}). ` + \"If you haven't configured the universe domain explicitly, googleapis.com is the default.\");\n    }\n    if (options.http2) {\n      const authHeaders = await authClient.getRequestHeaders(options.url);\n      const mooOpts = Object.assign({}, options);\n      mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n      return h2.request(mooOpts);\n    } else {\n      return authClient.request(options);\n    }\n  } else {\n    return new google_auth_library_1.DefaultTransporter().request(options);\n  }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n  constructor() {\n    super(...arguments);\n    this.bytesRead = 0;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _transform(chunk, encoding, callback) {\n    this.bytesRead += chunk.length;\n    this.emit('progress', this.bytesRead);\n    this.push(chunk);\n    callback();\n  }\n}\nfunction populateAPIHeader(headers, apiVersion) {\n  // TODO: we should eventually think about adding browser support for this\n  // populating the gl-web header (web support should also be added to\n  // google-auth-library-nodejs).\n  if (!(0, isbrowser_1.isBrowser)()) {\n    headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n  }\n  if (apiVersion) {\n    headers['x-goog-api-version'] = apiVersion;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createAPIRequest","google_auth_library_1","require","qs","stream","urlTemplate","uuid","extend","isbrowser_1","h2","pkg","isReadableStream","obj","pipe","readable","_read","_readableState","getMissingParams","params","required","missing","Array","forEach","param","undefined","push","length","parameters","callback","createAPIRequestAsync","then","r","_a","_b","_c","_d","options","context","google","_options","userAgentDirectives","media","resource","requestBody","requiredParams","includes","authClient","auth","defaultMime","body","headers","populateAPIHeader","apiVersion","keys","key","slice","newKey","missingParams","Error","join","url","toString","parse","expand","mediaUrl","rootUrl","originalUrl","URL","path","href","substr","origin","paramsSerializer","stringify","arrayFormat","pathParams","multipartUpload","multipart","boundary","v4","finale","rStream","PassThrough","flush","pStream","ProgressStream","isStream","part","preamble","on","bytesRead","onUploadProgress","data","browserMultipartUpload","content","uploadType","JSON","mimeType","isBrowser","assign","product","version","comment","userAgent","map","d","line","validateStatus","status","retry","universeDomain","universe_domain","universeDomainEnvVar","process","env","hostname","endsWith","replace","universeFromAuth","getUniverseDomain","http2","authHeaders","getRequestHeaders","mooOpts","request","DefaultTransporter","Transform","constructor","arguments","_transform","chunk","encoding","emit","versions","node"],"sources":["C:/Users/citla/codebase/playingWithCursor/projects/javascript/node_modules/googleapis-common/build/src/apirequest.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst h2 = require(\"./http2\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        typeof obj.pipe === 'function' &&\n        obj.readable !== false &&\n        typeof obj._read === 'function' &&\n        typeof obj._readableState === 'object');\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    var _a, _b, _c, _d;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call with the global options configured at the API Context\n    // level, or at the global level.\n    const options = extend(true, {}, // Ensure we don't leak settings upstream\n    ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n    parameters.context._options || {}, // Per-API options\n    parameters.options // API call params\n    );\n    const params = extend(true, {}, // New base object\n    options.params, // Combined global/per-api params\n    parameters.params // API call params\n    );\n    options.userAgentDirectives = options.userAgentDirectives || [];\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This meant that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    let resource = params.requestBody;\n    if (!params.requestBody &&\n        params.resource &&\n        (!parameters.requiredParams.includes('resource') ||\n            typeof params.resource !== 'string')) {\n        resource = params.resource;\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth || options.auth;\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers, options.apiVersion);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        let url = options.url;\n        if (typeof url === 'object') {\n            url = url.toString();\n        }\n        options.url = urlTemplate.parse(url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // Rewrite url if rootUrl is globally set\n    if (parameters.context._options.rootUrl !== undefined &&\n        options.url !== undefined) {\n        const originalUrl = new URL(options.url);\n        const path = originalUrl.href.substr(originalUrl.origin.length);\n        options.url = new URL(path, parameters.context._options.rootUrl).href;\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path params from the params object so they do not end up in query\n    parameters.pathParams.forEach(param => delete params[param]);\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    function multipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        const rStream = new stream.PassThrough({\n            flush(callback) {\n                this.push('\\r\\n');\n                this.push(finale);\n                callback();\n            },\n        });\n        const pStream = new ProgressStream();\n        const isStream = isReadableStream(multipart[1].body);\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            rStream.push(preamble);\n            if (typeof part.body === 'string') {\n                rStream.push(part.body);\n                rStream.push('\\r\\n');\n            }\n            else {\n                // Gaxios does not natively support onUploadProgress in node.js.\n                // Pipe through the pStream first to read the number of bytes read\n                // for the purpose of tracking progress.\n                pStream.on('progress', bytesRead => {\n                    if (options.onUploadProgress) {\n                        options.onUploadProgress({ bytesRead });\n                    }\n                });\n                part.body.pipe(pStream).pipe(rStream);\n            }\n        }\n        if (!isStream) {\n            rStream.push(finale);\n            rStream.push(null);\n        }\n        options.data = rStream;\n    }\n    function browserMultipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        let content = '';\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            content += preamble;\n            if (typeof part.body === 'string') {\n                content += part.body;\n                content += '\\r\\n';\n            }\n        }\n        content += finale;\n        options.data = content;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'content-type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'content-type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            if (!(0, isbrowser_1.isBrowser)()) {\n                // gaxios doesn't support multipart/related uploads, so it has to\n                // be implemented here.\n                multipartUpload(multipart);\n            }\n            else {\n                browserMultipartUpload(multipart);\n            }\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'content-type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!(0, isbrowser_1.isBrowser)()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        options.userAgentDirectives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = options.userAgentDirectives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    delete options.auth; // is overridden by our auth code\n    // Determine TPC universe\n    if (options.universeDomain &&\n        options.universe_domain &&\n        options.universeDomain !== options.universe_domain) {\n        throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n        ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n        : undefined;\n    const universeDomain = (_d = (_c = (_b = options.universeDomain) !== null && _b !== void 0 ? _b : options.universe_domain) !== null && _c !== void 0 ? _c : universeDomainEnvVar) !== null && _d !== void 0 ? _d : 'googleapis.com';\n    // Update URL to point to the given TPC universe\n    if (universeDomain !== 'googleapis.com' && options.url) {\n        const url = new URL(options.url);\n        if (url.hostname.endsWith('.googleapis.com')) {\n            url.hostname = url.hostname.replace(/googleapis\\.com$/, universeDomain);\n            options.url = url.toString();\n        }\n    }\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        // Validate TPC universe\n        const universeFromAuth = typeof authClient.getUniverseDomain === 'function'\n            ? await authClient.getUniverseDomain()\n            : undefined;\n        if (universeFromAuth && universeDomain !== universeFromAuth) {\n            throw new Error(`The configured universe domain (${universeDomain}) does not match the universe domain found in the credentials (${universeFromAuth}). ` +\n                \"If you haven't configured the universe domain explicitly, googleapis.com is the default.\");\n        }\n        if (options.http2) {\n            const authHeaders = await authClient.getRequestHeaders(options.url);\n            const mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return h2.request(mooOpts);\n        }\n        else {\n            return authClient.request(options);\n        }\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(options);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers, apiVersion) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!(0, isbrowser_1.isBrowser)()) {\n        headers['x-goog-api-client'] =\n            `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n    }\n    if (apiVersion) {\n        headers['x-goog-api-version'] = apiVersion;\n    }\n}\n//# sourceMappingURL=apirequest.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}