{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adexchangebuyer2_v2beta1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adexchangebuyer2_v2beta1;\n(function (adexchangebuyer2_v2beta1) {\n  /**\n   * Ad Exchange Buyer API II\n   *\n   * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n   * ```\n   */\n  class Adexchangebuyer2 {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.bidders = new Resource$Bidders(this.context);\n      this.buyers = new Resource$Buyers(this.context);\n    }\n  }\n  adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.clients = new Resource$Accounts$Clients(this.context);\n      this.creatives = new Resource$Accounts$Creatives(this.context);\n      this.finalizedProposals = new Resource$Accounts$Finalizedproposals(this.context);\n      this.products = new Resource$Accounts$Products(this.context);\n      this.proposals = new Resource$Accounts$Proposals(this.context);\n      this.publisherProfiles = new Resource$Accounts$Publisherprofiles(this.context);\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n  class Resource$Accounts$Clients {\n    constructor(context) {\n      this.context = context;\n      this.invitations = new Resource$Accounts$Clients$Invitations(this.context);\n      this.users = new Resource$Accounts$Clients$Users(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId'],\n        pathParams: ['accountId', 'clientAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId'],\n        pathParams: ['accountId', 'clientAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n  class Resource$Accounts$Clients$Invitations {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId'],\n        pathParams: ['accountId', 'clientAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n        pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId'],\n        pathParams: ['accountId', 'clientAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n  class Resource$Accounts$Clients$Users {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId', 'userId'],\n        pathParams: ['accountId', 'clientAccountId', 'userId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId'],\n        pathParams: ['accountId', 'clientAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'clientAccountId', 'userId'],\n        pathParams: ['accountId', 'clientAccountId', 'userId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n  class Resource$Accounts$Creatives {\n    constructor(context) {\n      this.context = context;\n      this.dealAssociations = new Resource$Accounts$Creatives$Dealassociations(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    watch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n  class Resource$Accounts$Creatives$Dealassociations {\n    constructor(context) {\n      this.context = context;\n    }\n    add(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    remove(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'creativeId'],\n        pathParams: ['accountId', 'creativeId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n  class Resource$Accounts$Finalizedproposals {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    pause(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    resume(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n  class Resource$Accounts$Products {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'productId'],\n        pathParams: ['accountId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n  class Resource$Accounts$Proposals {\n    constructor(context) {\n      this.context = context;\n    }\n    accept(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    addNote(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    pause(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    resume(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'proposalId'],\n        pathParams: ['accountId', 'proposalId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n  class Resource$Accounts$Publisherprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId', 'publisherProfileId'],\n        pathParams: ['accountId', 'publisherProfileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n  class Resource$Bidders {\n    constructor(context) {\n      this.context = context;\n      this.accounts = new Resource$Bidders$Accounts(this.context);\n      this.filterSets = new Resource$Bidders$Filtersets(this.context);\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n  class Resource$Bidders$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n  class Resource$Bidders$Accounts$Filtersets {\n    constructor(context) {\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n  class Resource$Bidders$Accounts$Filtersets$Bidmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n  class Resource$Bidders$Accounts$Filtersets$Bidresponseerrors {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n  class Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n  class Resource$Bidders$Accounts$Filtersets$Filteredbidrequests {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n  class Resource$Bidders$Accounts$Filtersets$Filteredbids {\n    constructor(context) {\n      this.context = context;\n      this.creatives = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n  class Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n  class Resource$Bidders$Accounts$Filtersets$Filteredbids$Details {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n  class Resource$Bidders$Accounts$Filtersets$Impressionmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n  class Resource$Bidders$Accounts$Filtersets$Losingbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n  class Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n  class Resource$Bidders$Filtersets {\n    constructor(context) {\n      this.context = context;\n      this.bidMetrics = new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Bidders$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Bidders$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n  class Resource$Bidders$Filtersets$Bidmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n  class Resource$Bidders$Filtersets$Bidresponseerrors {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n  class Resource$Bidders$Filtersets$Bidresponseswithoutbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n  class Resource$Bidders$Filtersets$Filteredbidrequests {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n  class Resource$Bidders$Filtersets$Filteredbids {\n    constructor(context) {\n      this.context = context;\n      this.creatives = new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n  class Resource$Bidders$Filtersets$Filteredbids$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n  class Resource$Bidders$Filtersets$Filteredbids$Details {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n  class Resource$Bidders$Filtersets$Impressionmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n  class Resource$Bidders$Filtersets$Losingbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n  class Resource$Bidders$Filtersets$Nonbillablewinningbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n  class Resource$Buyers {\n    constructor(context) {\n      this.context = context;\n      this.filterSets = new Resource$Buyers$Filtersets(this.context);\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers = Resource$Buyers;\n  class Resource$Buyers$Filtersets {\n    constructor(context) {\n      this.context = context;\n      this.bidMetrics = new Resource$Buyers$Filtersets$Bidmetrics(this.context);\n      this.bidResponseErrors = new Resource$Buyers$Filtersets$Bidresponseerrors(this.context);\n      this.bidResponsesWithoutBids = new Resource$Buyers$Filtersets$Bidresponseswithoutbids(this.context);\n      this.filteredBidRequests = new Resource$Buyers$Filtersets$Filteredbidrequests(this.context);\n      this.filteredBids = new Resource$Buyers$Filtersets$Filteredbids(this.context);\n      this.impressionMetrics = new Resource$Buyers$Filtersets$Impressionmetrics(this.context);\n      this.losingBids = new Resource$Buyers$Filtersets$Losingbids(this.context);\n      this.nonBillableWinningBids = new Resource$Buyers$Filtersets$Nonbillablewinningbids(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['ownerName'],\n        pathParams: ['ownerName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets = Resource$Buyers$Filtersets;\n  class Resource$Buyers$Filtersets$Bidmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidmetrics = Resource$Buyers$Filtersets$Bidmetrics;\n  class Resource$Buyers$Filtersets$Bidresponseerrors {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidresponseerrors = Resource$Buyers$Filtersets$Bidresponseerrors;\n  class Resource$Buyers$Filtersets$Bidresponseswithoutbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidresponseswithoutbids = Resource$Buyers$Filtersets$Bidresponseswithoutbids;\n  class Resource$Buyers$Filtersets$Filteredbidrequests {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbidrequests = Resource$Buyers$Filtersets$Filteredbidrequests;\n  class Resource$Buyers$Filtersets$Filteredbids {\n    constructor(context) {\n      this.context = context;\n      this.creatives = new Resource$Buyers$Filtersets$Filteredbids$Creatives(this.context);\n      this.details = new Resource$Buyers$Filtersets$Filteredbids$Details(this.context);\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids = Resource$Buyers$Filtersets$Filteredbids;\n  class Resource$Buyers$Filtersets$Filteredbids$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids$Creatives = Resource$Buyers$Filtersets$Filteredbids$Creatives;\n  class Resource$Buyers$Filtersets$Filteredbids$Details {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName', 'creativeStatusId'],\n        pathParams: ['creativeStatusId', 'filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids$Details = Resource$Buyers$Filtersets$Filteredbids$Details;\n  class Resource$Buyers$Filtersets$Impressionmetrics {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Impressionmetrics = Resource$Buyers$Filtersets$Impressionmetrics;\n  class Resource$Buyers$Filtersets$Losingbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Losingbids = Resource$Buyers$Filtersets$Losingbids;\n  class Resource$Buyers$Filtersets$Nonbillablewinningbids {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['filterSetName'],\n        pathParams: ['filterSetName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Nonbillablewinningbids = Resource$Buyers$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = adexchangebuyer2_v2beta1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","adexchangebuyer2_v2beta1","googleapis_common_1","require","Adexchangebuyer2","constructor","options","google","context","_options","accounts","Resource$Accounts","bidders","Resource$Bidders","buyers","Resource$Buyers","clients","Resource$Accounts$Clients","creatives","Resource$Accounts$Creatives","finalizedProposals","Resource$Accounts$Finalizedproposals","products","Resource$Accounts$Products","proposals","Resource$Accounts$Proposals","publisherProfiles","Resource$Accounts$Publisherprofiles","invitations","Resource$Accounts$Clients$Invitations","users","Resource$Accounts$Clients$Users","create","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","apiVersion","requiredParams","pathParams","createAPIRequest","get","list","update","dealAssociations","Resource$Accounts$Creatives$Dealassociations","stopWatching","watch","add","remove","pause","resume","accept","addNote","cancelNegotiation","completeSetup","Resource$Bidders$Accounts","filterSets","Resource$Bidders$Filtersets","Resource$Bidders$Accounts$Filtersets","bidMetrics","Resource$Bidders$Accounts$Filtersets$Bidmetrics","bidResponseErrors","Resource$Bidders$Accounts$Filtersets$Bidresponseerrors","bidResponsesWithoutBids","Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids","filteredBidRequests","Resource$Bidders$Accounts$Filtersets$Filteredbidrequests","filteredBids","Resource$Bidders$Accounts$Filtersets$Filteredbids","impressionMetrics","Resource$Bidders$Accounts$Filtersets$Impressionmetrics","losingBids","Resource$Bidders$Accounts$Filtersets$Losingbids","nonBillableWinningBids","Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids","delete","Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives","details","Resource$Bidders$Accounts$Filtersets$Filteredbids$Details","Resource$Bidders$Filtersets$Bidmetrics","Resource$Bidders$Filtersets$Bidresponseerrors","Resource$Bidders$Filtersets$Bidresponseswithoutbids","Resource$Bidders$Filtersets$Filteredbidrequests","Resource$Bidders$Filtersets$Filteredbids","Resource$Bidders$Filtersets$Impressionmetrics","Resource$Bidders$Filtersets$Losingbids","Resource$Bidders$Filtersets$Nonbillablewinningbids","Resource$Bidders$Filtersets$Filteredbids$Creatives","Resource$Bidders$Filtersets$Filteredbids$Details","Resource$Buyers$Filtersets","Resource$Buyers$Filtersets$Bidmetrics","Resource$Buyers$Filtersets$Bidresponseerrors","Resource$Buyers$Filtersets$Bidresponseswithoutbids","Resource$Buyers$Filtersets$Filteredbidrequests","Resource$Buyers$Filtersets$Filteredbids","Resource$Buyers$Filtersets$Impressionmetrics","Resource$Buyers$Filtersets$Losingbids","Resource$Buyers$Filtersets$Nonbillablewinningbids","Resource$Buyers$Filtersets$Filteredbids$Creatives","Resource$Buyers$Filtersets$Filteredbids$Details"],"sources":["C:/Users/citla/codebase/playingWithCursor/projects/javascript/node_modules/googleapis/build/src/apis/adexchangebuyer2/v2beta1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adexchangebuyer2_v2beta1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar adexchangebuyer2_v2beta1;\n(function (adexchangebuyer2_v2beta1) {\n    /**\n     * Ad Exchange Buyer API II\n     *\n     * Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const adexchangebuyer2 = google.adexchangebuyer2('v2beta1');\n     * ```\n     */\n    class Adexchangebuyer2 {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.bidders = new Resource$Bidders(this.context);\n            this.buyers = new Resource$Buyers(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Adexchangebuyer2 = Adexchangebuyer2;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.clients = new Resource$Accounts$Clients(this.context);\n            this.creatives = new Resource$Accounts$Creatives(this.context);\n            this.finalizedProposals = new Resource$Accounts$Finalizedproposals(this.context);\n            this.products = new Resource$Accounts$Products(this.context);\n            this.proposals = new Resource$Accounts$Proposals(this.context);\n            this.publisherProfiles = new Resource$Accounts$Publisherprofiles(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Clients {\n        constructor(context) {\n            this.context = context;\n            this.invitations = new Resource$Accounts$Clients$Invitations(this.context);\n            this.users = new Resource$Accounts$Clients$Users(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/clients').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients = Resource$Accounts$Clients;\n    class Resource$Accounts$Clients$Invitations {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'invitationId'],\n                pathParams: ['accountId', 'clientAccountId', 'invitationId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Invitations = Resource$Accounts$Clients$Invitations;\n    class Resource$Accounts$Clients$Users {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId'],\n                pathParams: ['accountId', 'clientAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'clientAccountId', 'userId'],\n                pathParams: ['accountId', 'clientAccountId', 'userId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Clients$Users = Resource$Accounts$Clients$Users;\n    class Resource$Accounts$Creatives {\n        constructor(context) {\n            this.context = context;\n            this.dealAssociations = new Resource$Accounts$Creatives$Dealassociations(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        stopWatching(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/creatives/{creativeId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives = Resource$Accounts$Creatives;\n    class Resource$Accounts$Creatives$Dealassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        add(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        remove(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'creativeId'],\n                pathParams: ['accountId', 'creativeId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Creatives$Dealassociations = Resource$Accounts$Creatives$Dealassociations;\n    class Resource$Accounts$Finalizedproposals {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/finalizedProposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Finalizedproposals = Resource$Accounts$Finalizedproposals;\n    class Resource$Accounts$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'productId'],\n                pathParams: ['accountId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Products = Resource$Accounts$Products;\n    class Resource$Accounts$Proposals {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        addNote(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        cancelNegotiation(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        completeSetup(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:pause').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        resume(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/proposals/{proposalId}:resume').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/proposals/{proposalId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'proposalId'],\n                pathParams: ['accountId', 'proposalId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Proposals = Resource$Accounts$Proposals;\n    class Resource$Accounts$Publisherprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'publisherProfileId'],\n                pathParams: ['accountId', 'publisherProfileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/accounts/{accountId}/publisherProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Accounts$Publisherprofiles = Resource$Accounts$Publisherprofiles;\n    class Resource$Bidders {\n        constructor(context) {\n            this.context = context;\n            this.accounts = new Resource$Bidders$Accounts(this.context);\n            this.filterSets = new Resource$Bidders$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders = Resource$Bidders;\n    class Resource$Bidders$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.filterSets = new Resource$Bidders$Accounts$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts = Resource$Bidders$Accounts;\n    class Resource$Bidders$Accounts$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics = new Resource$Bidders$Accounts$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors =\n                new Resource$Bidders$Accounts$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids =\n                new Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids = new Resource$Bidders$Accounts$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics =\n                new Resource$Bidders$Accounts$Filtersets$Impressionmetrics(this.context);\n            this.losingBids = new Resource$Bidders$Accounts$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids =\n                new Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets = Resource$Bidders$Accounts$Filtersets;\n    class Resource$Bidders$Accounts$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidmetrics = Resource$Bidders$Accounts$Filtersets$Bidmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseerrors = Resource$Bidders$Accounts$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Accounts$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbidrequests = Resource$Bidders$Accounts$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives(this.context);\n            this.details =\n                new Resource$Bidders$Accounts$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids = Resource$Bidders$Accounts$Filtersets$Filteredbids;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives = Resource$Bidders$Accounts$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Accounts$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Filteredbids$Details = Resource$Bidders$Accounts$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Accounts$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Impressionmetrics = Resource$Bidders$Accounts$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Accounts$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Losingbids = Resource$Bidders$Accounts$Filtersets$Losingbids;\n    class Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids = Resource$Bidders$Accounts$Filtersets$Nonbillablewinningbids;\n    class Resource$Bidders$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics = new Resource$Bidders$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors =\n                new Resource$Bidders$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids =\n                new Resource$Bidders$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests =\n                new Resource$Bidders$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids = new Resource$Bidders$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics =\n                new Resource$Bidders$Filtersets$Impressionmetrics(this.context);\n            this.losingBids = new Resource$Bidders$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids =\n                new Resource$Bidders$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets = Resource$Bidders$Filtersets;\n    class Resource$Bidders$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidmetrics = Resource$Bidders$Filtersets$Bidmetrics;\n    class Resource$Bidders$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseerrors = Resource$Bidders$Filtersets$Bidresponseerrors;\n    class Resource$Bidders$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Bidresponseswithoutbids = Resource$Bidders$Filtersets$Bidresponseswithoutbids;\n    class Resource$Bidders$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbidrequests = Resource$Bidders$Filtersets$Filteredbidrequests;\n    class Resource$Bidders$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives = new Resource$Bidders$Filtersets$Filteredbids$Creatives(this.context);\n            this.details = new Resource$Bidders$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids = Resource$Bidders$Filtersets$Filteredbids;\n    class Resource$Bidders$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Creatives = Resource$Bidders$Filtersets$Filteredbids$Creatives;\n    class Resource$Bidders$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Filteredbids$Details = Resource$Bidders$Filtersets$Filteredbids$Details;\n    class Resource$Bidders$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Impressionmetrics = Resource$Bidders$Filtersets$Impressionmetrics;\n    class Resource$Bidders$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Losingbids = Resource$Bidders$Filtersets$Losingbids;\n    class Resource$Bidders$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Bidders$Filtersets$Nonbillablewinningbids = Resource$Bidders$Filtersets$Nonbillablewinningbids;\n    class Resource$Buyers {\n        constructor(context) {\n            this.context = context;\n            this.filterSets = new Resource$Buyers$Filtersets(this.context);\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers = Resource$Buyers;\n    class Resource$Buyers$Filtersets {\n        constructor(context) {\n            this.context = context;\n            this.bidMetrics = new Resource$Buyers$Filtersets$Bidmetrics(this.context);\n            this.bidResponseErrors = new Resource$Buyers$Filtersets$Bidresponseerrors(this.context);\n            this.bidResponsesWithoutBids =\n                new Resource$Buyers$Filtersets$Bidresponseswithoutbids(this.context);\n            this.filteredBidRequests =\n                new Resource$Buyers$Filtersets$Filteredbidrequests(this.context);\n            this.filteredBids = new Resource$Buyers$Filtersets$Filteredbids(this.context);\n            this.impressionMetrics = new Resource$Buyers$Filtersets$Impressionmetrics(this.context);\n            this.losingBids = new Resource$Buyers$Filtersets$Losingbids(this.context);\n            this.nonBillableWinningBids =\n                new Resource$Buyers$Filtersets$Nonbillablewinningbids(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+ownerName}/filterSets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['ownerName'],\n                pathParams: ['ownerName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets = Resource$Buyers$Filtersets;\n    class Resource$Buyers$Filtersets$Bidmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidmetrics = Resource$Buyers$Filtersets$Bidmetrics;\n    class Resource$Buyers$Filtersets$Bidresponseerrors {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponseErrors').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidresponseerrors = Resource$Buyers$Filtersets$Bidresponseerrors;\n    class Resource$Buyers$Filtersets$Bidresponseswithoutbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/bidResponsesWithoutBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Bidresponseswithoutbids = Resource$Buyers$Filtersets$Bidresponseswithoutbids;\n    class Resource$Buyers$Filtersets$Filteredbidrequests {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBidRequests').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbidrequests = Resource$Buyers$Filtersets$Filteredbidrequests;\n    class Resource$Buyers$Filtersets$Filteredbids {\n        constructor(context) {\n            this.context = context;\n            this.creatives = new Resource$Buyers$Filtersets$Filteredbids$Creatives(this.context);\n            this.details = new Resource$Buyers$Filtersets$Filteredbids$Details(this.context);\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/filteredBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids = Resource$Buyers$Filtersets$Filteredbids;\n    class Resource$Buyers$Filtersets$Filteredbids$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids$Creatives = Resource$Buyers$Filtersets$Filteredbids$Creatives;\n    class Resource$Buyers$Filtersets$Filteredbids$Details {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/v2beta1/{+filterSetName}/filteredBids/{creativeStatusId}/details').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName', 'creativeStatusId'],\n                pathParams: ['creativeStatusId', 'filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Filteredbids$Details = Resource$Buyers$Filtersets$Filteredbids$Details;\n    class Resource$Buyers$Filtersets$Impressionmetrics {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/impressionMetrics').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Impressionmetrics = Resource$Buyers$Filtersets$Impressionmetrics;\n    class Resource$Buyers$Filtersets$Losingbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/losingBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Losingbids = Resource$Buyers$Filtersets$Losingbids;\n    class Resource$Buyers$Filtersets$Nonbillablewinningbids {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://adexchangebuyer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v2beta1/{+filterSetName}/nonBillableWinningBids').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['filterSetName'],\n                pathParams: ['filterSetName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    adexchangebuyer2_v2beta1.Resource$Buyers$Filtersets$Nonbillablewinningbids = Resource$Buyers$Filtersets$Nonbillablewinningbids;\n})(adexchangebuyer2_v2beta1 || (exports.adexchangebuyer2_v2beta1 = adexchangebuyer2_v2beta1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}