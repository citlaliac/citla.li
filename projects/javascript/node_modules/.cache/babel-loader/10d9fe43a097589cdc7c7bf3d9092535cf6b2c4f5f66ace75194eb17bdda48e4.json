{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.policyanalyzer_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar policyanalyzer_v1;\n(function (policyanalyzer_v1) {\n  /**\n   * Policy Analyzer API\n   *\n   *\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const policyanalyzer = google.policyanalyzer('v1');\n   * ```\n   */\n  class Policyanalyzer {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.folders = new Resource$Folders(this.context);\n      this.organizations = new Resource$Organizations(this.context);\n      this.projects = new Resource$Projects(this.context);\n    }\n  }\n  policyanalyzer_v1.Policyanalyzer = Policyanalyzer;\n  class Resource$Folders {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Folders$Locations(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Folders = Resource$Folders;\n  class Resource$Folders$Locations {\n    constructor(context) {\n      this.context = context;\n      this.activityTypes = new Resource$Folders$Locations$Activitytypes(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Folders$Locations = Resource$Folders$Locations;\n  class Resource$Folders$Locations$Activitytypes {\n    constructor(context) {\n      this.context = context;\n      this.activities = new Resource$Folders$Locations$Activitytypes$Activities(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Folders$Locations$Activitytypes = Resource$Folders$Locations$Activitytypes;\n  class Resource$Folders$Locations$Activitytypes$Activities {\n    constructor(context) {\n      this.context = context;\n    }\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  policyanalyzer_v1.Resource$Folders$Locations$Activitytypes$Activities = Resource$Folders$Locations$Activitytypes$Activities;\n  class Resource$Organizations {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Organizations$Locations(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Organizations = Resource$Organizations;\n  class Resource$Organizations$Locations {\n    constructor(context) {\n      this.context = context;\n      this.activityTypes = new Resource$Organizations$Locations$Activitytypes(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Organizations$Locations = Resource$Organizations$Locations;\n  class Resource$Organizations$Locations$Activitytypes {\n    constructor(context) {\n      this.context = context;\n      this.activities = new Resource$Organizations$Locations$Activitytypes$Activities(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Organizations$Locations$Activitytypes = Resource$Organizations$Locations$Activitytypes;\n  class Resource$Organizations$Locations$Activitytypes$Activities {\n    constructor(context) {\n      this.context = context;\n    }\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  policyanalyzer_v1.Resource$Organizations$Locations$Activitytypes$Activities = Resource$Organizations$Locations$Activitytypes$Activities;\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n      this.locations = new Resource$Projects$Locations(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Projects = Resource$Projects;\n  class Resource$Projects$Locations {\n    constructor(context) {\n      this.context = context;\n      this.activityTypes = new Resource$Projects$Locations$Activitytypes(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n  class Resource$Projects$Locations$Activitytypes {\n    constructor(context) {\n      this.context = context;\n      this.activities = new Resource$Projects$Locations$Activitytypes$Activities(this.context);\n    }\n  }\n  policyanalyzer_v1.Resource$Projects$Locations$Activitytypes = Resource$Projects$Locations$Activitytypes;\n  class Resource$Projects$Locations$Activitytypes$Activities {\n    constructor(context) {\n      this.context = context;\n    }\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  policyanalyzer_v1.Resource$Projects$Locations$Activitytypes$Activities = Resource$Projects$Locations$Activitytypes$Activities;\n})(policyanalyzer_v1 || (exports.policyanalyzer_v1 = policyanalyzer_v1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","policyanalyzer_v1","googleapis_common_1","require","Policyanalyzer","constructor","options","google","context","_options","folders","Resource$Folders","organizations","Resource$Organizations","projects","Resource$Projects","locations","Resource$Folders$Locations","activityTypes","Resource$Folders$Locations$Activitytypes","activities","Resource$Folders$Locations$Activitytypes$Activities","query","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","apiVersion","requiredParams","pathParams","createAPIRequest","Resource$Organizations$Locations","Resource$Organizations$Locations$Activitytypes","Resource$Organizations$Locations$Activitytypes$Activities","Resource$Projects$Locations","Resource$Projects$Locations$Activitytypes","Resource$Projects$Locations$Activitytypes$Activities"],"sources":["C:/Users/citla/codebase/playingWithCursor/projects/javascript/node_modules/googleapis/build/src/apis/policyanalyzer/v1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.policyanalyzer_v1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar policyanalyzer_v1;\n(function (policyanalyzer_v1) {\n    /**\n     * Policy Analyzer API\n     *\n     *\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const policyanalyzer = google.policyanalyzer('v1');\n     * ```\n     */\n    class Policyanalyzer {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.folders = new Resource$Folders(this.context);\n            this.organizations = new Resource$Organizations(this.context);\n            this.projects = new Resource$Projects(this.context);\n        }\n    }\n    policyanalyzer_v1.Policyanalyzer = Policyanalyzer;\n    class Resource$Folders {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Folders$Locations(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Folders = Resource$Folders;\n    class Resource$Folders$Locations {\n        constructor(context) {\n            this.context = context;\n            this.activityTypes = new Resource$Folders$Locations$Activitytypes(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Folders$Locations = Resource$Folders$Locations;\n    class Resource$Folders$Locations$Activitytypes {\n        constructor(context) {\n            this.context = context;\n            this.activities = new Resource$Folders$Locations$Activitytypes$Activities(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Folders$Locations$Activitytypes = Resource$Folders$Locations$Activitytypes;\n    class Resource$Folders$Locations$Activitytypes$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    policyanalyzer_v1.Resource$Folders$Locations$Activitytypes$Activities = Resource$Folders$Locations$Activitytypes$Activities;\n    class Resource$Organizations {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Organizations$Locations(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Organizations = Resource$Organizations;\n    class Resource$Organizations$Locations {\n        constructor(context) {\n            this.context = context;\n            this.activityTypes = new Resource$Organizations$Locations$Activitytypes(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Organizations$Locations = Resource$Organizations$Locations;\n    class Resource$Organizations$Locations$Activitytypes {\n        constructor(context) {\n            this.context = context;\n            this.activities =\n                new Resource$Organizations$Locations$Activitytypes$Activities(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Organizations$Locations$Activitytypes = Resource$Organizations$Locations$Activitytypes;\n    class Resource$Organizations$Locations$Activitytypes$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    policyanalyzer_v1.Resource$Organizations$Locations$Activitytypes$Activities = Resource$Organizations$Locations$Activitytypes$Activities;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n            this.locations = new Resource$Projects$Locations(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Projects = Resource$Projects;\n    class Resource$Projects$Locations {\n        constructor(context) {\n            this.context = context;\n            this.activityTypes = new Resource$Projects$Locations$Activitytypes(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Projects$Locations = Resource$Projects$Locations;\n    class Resource$Projects$Locations$Activitytypes {\n        constructor(context) {\n            this.context = context;\n            this.activities =\n                new Resource$Projects$Locations$Activitytypes$Activities(this.context);\n        }\n    }\n    policyanalyzer_v1.Resource$Projects$Locations$Activitytypes = Resource$Projects$Locations$Activitytypes;\n    class Resource$Projects$Locations$Activitytypes$Activities {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://policyanalyzer.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/v1/{+parent}/activities:query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    policyanalyzer_v1.Resource$Projects$Locations$Activitytypes$Activities = Resource$Projects$Locations$Activitytypes$Activities;\n})(policyanalyzer_v1 || (exports.policyanalyzer_v1 = policyanalyzer_v1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}