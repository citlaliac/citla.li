{"ast":null,"code":"import { google } from 'googleapis';\nconst auth = new google.auth.GoogleAuth({\n  credentials: {\n    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n')\n  },\n  scopes: ['https://www.googleapis.com/auth/spreadsheets']\n});\nconst sheets = google.sheets({\n  version: 'v4',\n  auth\n});\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\nexport const appendToSheet = async values => {\n  try {\n    const response = await sheets.spreadsheets.values.append({\n      spreadsheetId: SPREADSHEET_ID,\n      range: 'Sheet1!A:Z',\n      // Adjust range as needed\n      valueInputOption: 'USER_ENTERED',\n      requestBody: {\n        values: [values]\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error appending to sheet:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["google","auth","GoogleAuth","credentials","client_email","process","env","REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL","private_key","REACT_APP_GOOGLE_PRIVATE_KEY","replace","scopes","sheets","version","SPREADSHEET_ID","REACT_APP_SPREADSHEET_ID","appendToSheet","values","response","spreadsheets","append","spreadsheetId","range","valueInputOption","requestBody","data","error","console"],"sources":["C:/Users/citla/codebase/playingWithCursor/projects/javascript/src/services/googleSheets.js"],"sourcesContent":["import { google } from 'googleapis';\r\n\r\nconst auth = new google.auth.GoogleAuth({\r\n  credentials: {\r\n    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\r\n  },\r\n  scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n});\r\n\r\nconst sheets = google.sheets({ version: 'v4', auth });\r\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID;\r\n\r\nexport const appendToSheet = async (values) => {\r\n  try {\r\n    const response = await sheets.spreadsheets.values.append({\r\n      spreadsheetId: SPREADSHEET_ID,\r\n      range: 'Sheet1!A:Z', // Adjust range as needed\r\n      valueInputOption: 'USER_ENTERED',\r\n      requestBody: {\r\n        values: [values],\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error appending to sheet:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,MAAMC,IAAI,GAAG,IAAID,MAAM,CAACC,IAAI,CAACC,UAAU,CAAC;EACtCC,WAAW,EAAE;IACXC,YAAY,EAAEC,OAAO,CAACC,GAAG,CAACC,sCAAsC;IAChEC,WAAW,EAAEH,OAAO,CAACC,GAAG,CAACG,4BAA4B,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI;EAC5E,CAAC;EACDC,MAAM,EAAE,CAAC,8CAA8C;AACzD,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGZ,MAAM,CAACY,MAAM,CAAC;EAAEC,OAAO,EAAE,IAAI;EAAEZ;AAAK,CAAC,CAAC;AACrD,MAAMa,cAAc,GAAGT,OAAO,CAACC,GAAG,CAACS,wBAAwB;AAE3D,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,YAAY,CAACF,MAAM,CAACG,MAAM,CAAC;MACvDC,aAAa,EAAEP,cAAc;MAC7BQ,KAAK,EAAE,YAAY;MAAE;MACrBC,gBAAgB,EAAE,cAAc;MAChCC,WAAW,EAAE;QACXP,MAAM,EAAE,CAACA,MAAM;MACjB;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}