name: Deploy to PlanetHoster

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: projects/javascript/package-lock.json
        
    - name: Install dependencies
      working-directory: projects/javascript
      run: npm ci
      
    - name: Build React app
      working-directory: projects/javascript
      run: CI=false npm run build
      
    - name: Prepare deployment files
      working-directory: projects/javascript
      run: |
        # Debug: Check if build directory exists
        echo "Checking build directory..."
        ls -la build/ || echo "Build directory not found!"
        
        # Create deployment directory structure
        mkdir -p deployment/public_html
        
        # Copy React build files to public_html root (where your website expects them)
        echo "Copying build files..."
        cp -r build/* deployment/public_html/ || echo "Failed to copy build files"
        
        # Copy PHP files and server files to public_html root
        echo "Copying server files..."
        cp server/*.php deployment/public_html/ || echo "Failed to copy PHP files"
        cp server/server.js deployment/public_html/ || echo "Failed to copy server.js"
        cp server/package*.json deployment/public_html/ || echo "Failed to copy package files"
        
        # Copy any other important files
        echo "Copying other files..."
        cp public/robots.txt deployment/public_html/ || echo "Failed to copy robots.txt"
        cp public/sitemap.xml deployment/public_html/ || echo "Failed to copy sitemap.xml"
        cp public/manifest.json deployment/public_html/ || echo "Failed to copy manifest.json"
        
        # Copy assets to public_html root (for backward compatibility)
        echo "Copying assets..."
        cp -r public/assets deployment/public_html/ || echo "Failed to copy assets"
        
        # Debug: Show what was created
        echo "Deployment directory contents:"
        ls -la deployment/public_html/
        echo "Checking for index.html in root:"
        ls -la deployment/public_html/index.html || echo "index.html not found in root!"
        
    - name: Deploy to PlanetHoster via LFTP
      run: |
        # Install lftp
        sudo apt-get update
        sudo apt-get install -y lftp
        
        # Debug: Show what we're about to upload
        echo "=== FILES TO UPLOAD ==="
        ls -la projects/javascript/deployment/public_html/
        echo "=== INDEX.HTML CONTENT (first 10 lines) ==="
        head -10 projects/javascript/deployment/public_html/index.html
        
        # Create lftp script
        cat > lftp_script.txt << EOF
        set ftp:ssl-allow no
        set ftp:passive-mode on
        set net:timeout 30
        set net:max-retries 3
        open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_SERVER }}
        cd /public_html
        lcd projects/javascript/deployment/public_html
        mirror -R --verbose --exclude-glob .git* --exclude-glob node_modules*
        quit
        EOF
        
        # Run lftp script
        lftp -f lftp_script.txt
        
        # Debug: Verify upload by listing remote directory
        echo "=== VERIFYING UPLOAD ==="
        lftp -c "set ftp:ssl-allow no; open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_SERVER }}; cd /public_html; ls -la"
